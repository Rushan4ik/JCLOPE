Index: src/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.io.File;\nimport java.io.FileNotFoundException;\nimport java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws FileNotFoundException {\n        CLOPE clope = new CLOPE(readTransactions());\n        List<Cluster> clusters = clope.goCLOPE(1.2);\n        for (Cluster cluster : clusters) {\n            System.out.printf(\"%s - %d\\n\", cluster, cluster.getTransactionCount());\n        }\n        System.out.println(clusters.size());\n    }\n\n    private static List<Transaction> readTransactions() throws FileNotFoundException {\n        ArrayList<Transaction> arrayList = new ArrayList<>(8200);\n        Scanner scanner = new Scanner(new File(\"abalone.data\"));\n        int i = 0;\n        while (scanner.hasNextLine()) {\n            String line = scanner.nextLine();\n            if (line.charAt(0) == 'M') i++;\n            arrayList.add(new Transaction(line.substring(2).split(\",\"), line.charAt(0) == 'M'));\n        }\n        System.out.println(i);\n        return arrayList;\n    }\n/*    private static ArrayList<Cluster> clusters = new ArrayList<>();\n\n    private static ArrayList<Transaction> readTransactions() throws FileNotFoundException {\n        ArrayList<Transaction> transactions = new ArrayList<>(8200);\n        Scanner scanner = new Scanner(new File(\"agaricus-lepiota.data\"));\n        while (scanner.hasNextLine()) {\n            transactions.add(new Transaction(scanner.nextLine().split(\",\")));\n        }\n        return transactions;\n    }\n\n\n    public static void main(String[] args) throws FileNotFoundException {\n        double repulsion = 2.6 * 3;\n        ArrayList<Transaction> transactions = readTransactions();\n        HashMap<Integer, Integer> mapTransactionToCluster = new HashMap<>();\n        for (int i = 0; i < transactions.size(); ++i) {\n            int resIndex = handleTransaction(transactions.get(i), repulsion);\n            mapTransactionToCluster.put(i, resIndex);\n        }\n        Map<Integer, Integer> mapCtoT = new HashMap<>();\n        mapTransactionToCluster.forEach((k, v) -> {\n            mapCtoT.put(v, mapCtoT.getOrDefault(v, 0) + 1);\n        });\n        mapCtoT.forEach((k, v) -> System.out.printf(\"%d: %d\\n\", k, v));\n    }\n\n    private static int handleTransaction(Transaction transaction, double repulsion) {\n        int index = -1;\n        Cluster newCluster = new Cluster();\n        double value = newCluster.deltaAdd(transaction, repulsion);\n        double other = 0;\n        for (int i = 0; i < clusters.size(); ++i) {\n            Cluster cluster = clusters.get(i);\n            double current = cluster.deltaAdd(transaction, repulsion);\n            if (current > other) {\n                other = current;\n                index = i;\n            }\n        }\n        if (value > other) {\n            clusters.add(newCluster);\n            index = clusters.size() - 1;\n        }\n        clusters.get(index).addTransaction(transaction);\n        return index;\n    }*/\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Main.java b/src/Main.java
--- a/src/Main.java	(revision 692da77123b8f07168227e7dcef5e5e17aab1b1f)
+++ b/src/Main.java	(date 1673515829191)
@@ -4,25 +4,9 @@
 
 public class Main {
     public static void main(String[] args) throws FileNotFoundException {
-        CLOPE clope = new CLOPE(readTransactions());
-        List<Cluster> clusters = clope.goCLOPE(1.2);
-        for (Cluster cluster : clusters) {
-            System.out.printf("%s - %d\n", cluster, cluster.getTransactionCount());
-        }
-        System.out.println(clusters.size());
     }
 
     private static List<Transaction> readTransactions() throws FileNotFoundException {
-        ArrayList<Transaction> arrayList = new ArrayList<>(8200);
-        Scanner scanner = new Scanner(new File("abalone.data"));
-        int i = 0;
-        while (scanner.hasNextLine()) {
-            String line = scanner.nextLine();
-            if (line.charAt(0) == 'M') i++;
-            arrayList.add(new Transaction(line.substring(2).split(","), line.charAt(0) == 'M'));
-        }
-        System.out.println(i);
-        return arrayList;
     }
 /*    private static ArrayList<Cluster> clusters = new ArrayList<>();
 
